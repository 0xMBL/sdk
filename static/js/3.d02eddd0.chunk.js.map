{"version":3,"sources":["../node_modules/aleo-wasm/aleo_wasm_bg.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/aleo-wasm/aleo_wasm.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","cachegetUint32Memory0","getArrayJsValueFromWasm0","Uint32Array","result","i","u32CvtShim","uint64CvtShim","BigUint64Array","handleError","f","args","apply","this","e","getArrayU8FromWasm0","Account","__wrap","__destroy_into_raw","retptr","r0","r1","Object","create","prototype","private_key","ptr0","len0","Record","record","RecordCiphertext","view_key_string","ciphertext","instance","klass","Error","name","_assertClass","Transaction","transition_id","serial_number","commitment","v0","v1","transaction","__wbindgen_object_drop_ref","arg0","__wbindgen_string_new","arg1","__wbindgen_object_clone_ref","__wbg_randomFillSync_64cc7d048f228ca8","arg2","randomFillSync","arguments","__wbg_getRandomValues_98117e9a7e993920","getRandomValues","__wbg_process_2f24d6544ea7b200","process","__wbindgen_is_object","val","__wbg_versions_6164651e75405d4a","versions","__wbg_node_4b517d861cbcb3bc","node","__wbindgen_is_string","__wbg_modulerequire_3440a4bcf44437db","__wbg_crypto_98fc271021c7d2ad","crypto","__wbg_msCrypto_a2cdb043d2bfe57f","msCrypto","__wbg_newnoargs_be86524d73f67598","Function","__wbg_call_888d259a5fefc347","call","__wbg_self_c6fbdfc2918d5e58","self","__wbg_window_baec038b5ab35c54","window","__wbg_globalThis_3f735a5746d41fbd","globalThis","__wbg_global_1bc0b39582740e95","global","__wbindgen_is_undefined","__wbg_buffer_397eaa4d72ee94dd","__wbg_new_a7ce447f15ff496f","__wbg_set_969ad0a60e51d320","__wbg_length_1eb8fc608a0d4cdb","__wbg_newwithlength_929232475839a482","__wbg_subarray_8b658422a224f479","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory","exports","originalModule","webpackPolyfill","children","defineProperty","enumerable","get","l","_classCallCheck","Constructor","TypeError","_defineProperties","target","props","descriptor","configurable","writable","key","_createClass","protoProps","staticProps"],"mappings":"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","file":"static/js/3.d02eddd0.chunk.js","sourcesContent":["import * as wasm from './aleo_wasm_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*/\nexport class Account {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Account.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_account_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.account_new();\n        return Account.__wrap(ret);\n    }\n    /**\n    * @param {string} private_key\n    * @returns {Account}\n    */\n    static from_private_key(private_key) {\n        var ptr0 = passStringToWasm0(private_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.account_from_private_key(ptr0, len0);\n        return Account.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    to_private_key() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.account_to_private_key(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    to_view_key() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.account_to_view_key(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    to_address() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.account_to_address(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class Record {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Record.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_record_free(ptr);\n    }\n    /**\n    * @param {string} record\n    * @returns {Record}\n    */\n    static from_string(record) {\n        var ptr0 = passStringToWasm0(record, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.record_from_string(ptr0, len0);\n        return Record.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    owner() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_owner(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_dummy() {\n        var ret = wasm.record_is_dummy(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {string}\n    */\n    payload() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_payload(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    program_id() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_program_id(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    serial_number_nonce() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_serial_number_nonce(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    commitment() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_commitment(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    commitment_randomness() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_commitment_randomness(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {BigInt}\n    */\n    value() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_value(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    to_string() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_to_string(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class RecordCiphertext {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RecordCiphertext.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_recordciphertext_free(ptr);\n    }\n    /**\n    * @param {string} ciphertext\n    * @returns {RecordCiphertext}\n    */\n    static new(ciphertext) {\n        var ptr0 = passStringToWasm0(ciphertext, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.recordciphertext_new(ptr0, len0);\n        return RecordCiphertext.__wrap(ret);\n    }\n    /**\n    * @param {Record} record\n    * @returns {RecordCiphertext}\n    */\n    static encrypt(record) {\n        _assertClass(record, Record);\n        var ptr0 = record.ptr;\n        record.ptr = 0;\n        var ret = wasm.recordciphertext_encrypt(ptr0);\n        return RecordCiphertext.__wrap(ret);\n    }\n    /**\n    * @param {string} view_key_string\n    * @returns {Record}\n    */\n    decrypt(view_key_string) {\n        var ptr0 = passStringToWasm0(view_key_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.recordciphertext_decrypt(this.ptr, ptr0, len0);\n        return Record.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    to_string() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.recordciphertext_to_string(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class Transaction {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Transaction.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_transaction_free(ptr);\n    }\n    /**\n    * @param {string} transaction\n    * @returns {Transaction}\n    */\n    static from_string(transaction) {\n        var ptr0 = passStringToWasm0(transaction, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transaction_from_string(ptr0, len0);\n        return Transaction.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    to_string() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_to_string(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_valid() {\n        var ret = wasm.transaction_is_valid(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {string} transition_id\n    * @returns {boolean}\n    */\n    contains_transition_id(transition_id) {\n        var ptr0 = passStringToWasm0(transition_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transaction_contains_transition_id(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * @param {string} serial_number\n    * @returns {boolean}\n    */\n    contains_serial_number(serial_number) {\n        var ptr0 = passStringToWasm0(serial_number, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transaction_contains_serial_number(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * @param {string} commitment\n    * @returns {boolean}\n    */\n    contains_commitment(commitment) {\n        var ptr0 = passStringToWasm0(commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transaction_contains_commitment(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * @returns {string}\n    */\n    transaction_id() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_transaction_id(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    inner_circuit_id() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_inner_circuit_id(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    ledger_root() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_ledger_root(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {any[]}\n    */\n    transition_ids() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_transition_ids(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {any[]}\n    */\n    serial_numbers() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_serial_numbers(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {any[]}\n    */\n    commitments() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_commitments(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {any[]}\n    */\n    ciphertexts() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_ciphertexts(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    value_balance() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_value_balance(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {any[]}\n    */\n    transitions() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_transitions(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {any[]}\n    */\n    to_ciphertext_ids() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.transaction_to_ciphertext_ids(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} view_key_string\n    * @returns {any[]}\n    */\n    to_decrypted_records(view_key_string) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passStringToWasm0(view_key_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.transaction_to_decrypted_records(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    var ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_randomFillSync_64cc7d048f228ca8() { return handleError(function (arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n}, arguments) };\n\nexport function __wbg_getRandomValues_98117e9a7e993920() { return handleError(function (arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_process_2f24d6544ea7b200(arg0) {\n    var ret = getObject(arg0).process;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_object(arg0) {\n    const val = getObject(arg0);\n    var ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nexport function __wbg_versions_6164651e75405d4a(arg0) {\n    var ret = getObject(arg0).versions;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_node_4b517d861cbcb3bc(arg0) {\n    var ret = getObject(arg0).node;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_string(arg0) {\n    var ret = typeof(getObject(arg0)) === 'string';\n    return ret;\n};\n\nexport function __wbg_modulerequire_3440a4bcf44437db() { return handleError(function (arg0, arg1) {\n    var ret = module.require(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_crypto_98fc271021c7d2ad(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_msCrypto_a2cdb043d2bfe57f(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_newnoargs_be86524d73f67598(arg0, arg1) {\n    var ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_call_888d259a5fefc347() { return handleError(function (arg0, arg1) {\n    var ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_self_c6fbdfc2918d5e58() { return handleError(function () {\n    var ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_window_baec038b5ab35c54() { return handleError(function () {\n    var ret = window.window;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_globalThis_3f735a5746d41fbd() { return handleError(function () {\n    var ret = globalThis.globalThis;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_global_1bc0b39582740e95() { return handleError(function () {\n    var ret = global.global;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_is_undefined(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbg_buffer_397eaa4d72ee94dd(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_a7ce447f15ff496f(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_969ad0a60e51d320(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport function __wbg_length_1eb8fc608a0d4cdb(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport function __wbg_newwithlength_929232475839a482(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_subarray_8b658422a224f479(arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_rethrow(arg0) {\n    throw takeObject(arg0);\n};\n\nexport function __wbindgen_memory() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import * as wasm from \"./aleo_wasm_bg.wasm\";\nexport * from \"./aleo_wasm_bg.js\";"],"sourceRoot":""}