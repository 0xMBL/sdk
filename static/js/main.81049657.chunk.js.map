{"version":3,"sources":["CopyButton.js","aleo-wasm-hook.js","NewAccount.js","AccountFromPrivateKey.js","App.js","reportWebVitals.js","index.js"],"names":["CopyButton","props","useState","copySuccess","setCopySuccess","copy","copyToClipboard","data","setTimeout","CheckCircleOutlined","onClick","CopyOutlined","useAleoWASM","aleo","setAleo","useEffect","then","module","NewAccount","account","setAccount","loading","setLoading","generateAccount","a","Account","privateKey","to_private_key","viewKey","to_view_key","address","to_address","title","style","width","borderRadius","bordered","justify","type","shape","size","offset","labelCol","span","wrapperCol","Item","label","colon","placeholder","value","addonAfter","disabled","AccountFromPrivateKey","layout","name","allowClear","onChange","event","from_private_key","target","error","console","Header","Layout","Content","Footer","App","className","minHeight","mode","defaultSelectedKeys","href","rel","padding","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+XAIaA,EAAa,SAACC,GACvB,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAO,WACTC,IAAgBL,EAAMM,MACtBH,GAAe,GACfI,YAAW,kBAAMJ,GAAe,KAAQ,MAG5C,OAAID,EACO,cAACM,EAAA,EAAD,CAAqBC,QAASL,IAE9B,cAACM,EAAA,EAAD,CAAcD,QAASL,KCdzBO,EAAc,WACvB,MAAwBV,mBAAS,MAAjC,mBAAOW,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WACO,OAATF,GACA,oDAAoBG,MAAK,SAAAC,GAAM,OAAIH,EAAQG,QAEhD,IACIJ,GCLEK,EAAa,WACtB,MAA8BhB,mBAAS,MAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KACA,EAA8BlB,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KACMT,EAAOD,IAEPW,EAAe,uCAAG,sBAAAC,EAAA,sDACpBF,GAAW,GACXd,YAAW,WACPY,EAAW,IAAIP,EAAKY,SACpBH,GAAW,KACZ,KALiB,2CAAH,qDASfI,EAAa,kBAAkB,OAAZP,EAAmBA,EAAQQ,iBAAmB,IACjEC,EAAU,kBAAkB,OAAZT,EAAmBA,EAAQU,cAAgB,IAC3DC,EAAU,kBAAkB,OAAZX,EAAmBA,EAAQY,aAAe,IAIhE,OAAa,OAATlB,EACO,eAAC,IAAD,CAAMmB,MAAM,uBAAuBC,MAAO,CAACC,MAAO,OAAQC,aAAc,QAASC,UAAU,EAA3F,UACH,eAAC,IAAD,CAAKC,QAAQ,SAAb,UACI,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQC,KAAK,UAAUC,MAAM,QAAQC,KAAK,QAAQ9B,QAASa,EACnDF,UAAWA,EADnB,wBAEL,cAAC,IAAD,CAAKoB,OAAO,IAAZ,SAAgB,cAAC,IAAD,CAAQF,MAAM,QAAQC,KAAK,QAAQ9B,QAbjD,kBAAMU,EAAW,OAaH,wBAGhBD,GACI,eAAC,IAAD,2BAXD,CAACuB,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,MAWxC,cACI,cAAC,IAAD,IACA,cAAC,IAAKE,KAAN,CAAWC,MAAM,cAAcC,OAAO,EAAtC,SACI,cAAC,IAAD,CAAOP,KAAK,QAAQQ,YAAY,cAAcC,MAAOvB,IAC9CwB,WAAY,cAAC,EAAD,CAAY3C,KAAMmB,MAAiByB,UAAQ,MAElE,cAAC,IAAKN,KAAN,CAAWC,MAAM,WAAWC,OAAO,EAAnC,SACI,cAAC,IAAD,CAAOP,KAAK,QAAQQ,YAAY,WAAWC,MAAOrB,IAC3CsB,WAAY,cAAC,EAAD,CAAY3C,KAAMqB,MAAcuB,UAAQ,MAE/D,cAAC,IAAKN,KAAN,CAAWC,MAAM,UAAUC,OAAO,EAAlC,SACI,cAAC,IAAD,CAAOP,KAAK,QAAQQ,YAAY,UAAUC,MAAOnB,IAC1CoB,WAAY,cAAC,EAAD,CAAY3C,KAAMuB,MAAcqB,UAAQ,aAMxE,6BACH,mDChDCC,EAAwB,WACjC,MAA8BlD,mBAAS,MAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KACMP,EAAOD,IAWPyC,EAAS,CAACX,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,KAExD,GAAa,OAAT9B,EAAe,CACf,IACMiB,EAAU,kBAAkB,OAAZX,EAAmBA,EAAQY,aAAe,IAEhE,OAAO,eAAC,IAAD,CAAMC,MAAM,gCAAgCC,MAAO,CAACC,MAAO,OAAQC,aAAc,QAC3EC,UAAU,EADhB,UAEH,cAAC,IAAD,2BAAUiB,GAAV,aACI,cAAC,IAAKR,KAAN,CAAWC,MAAM,cAAcC,OAAO,EAAtC,SACI,cAAC,IAAD,CAAOO,KAAK,aAAad,KAAK,QAAQQ,YAAY,cAAcO,YAAU,EAACC,SAnB1E,SAACC,GACdrC,EAAW,MACX,IACIA,EAAWP,EAAKY,QAAQiC,iBAAiBD,EAAME,OAAOV,QACxD,MAAOW,GACLC,QAAQD,MAAMA,KAeC3B,MAAO,CAACE,aAAc,eAIpB,OAAZhB,EACG,eAAC,IAAD,2BAAUkC,GAAV,cACI,cAAC,IAAD,IACA,cAAC,IAAKR,KAAN,CAAWC,MAAM,WAAWC,OAAO,EAAnC,SACI,cAAC,IAAD,CAAOP,KAAK,QAAQQ,YAAY,WAAWC,MAhB7B,OAAZ9B,EAAmBA,EAAQU,cAAgB,GAiBtCqB,WAAY,cAAC,EAAD,CAAY3C,KAAMuB,IAAWG,MAAO,CAACE,aAAc,UAAYgB,UAAQ,MAE9F,cAAC,IAAKN,KAAN,CAAWC,MAAM,UAAUC,OAAO,EAAlC,SACI,cAAC,IAAD,CAAOP,KAAK,QAAQQ,YAAY,UAAUC,MAAOnB,IAC1CoB,WAAY,cAAC,EAAD,CAAY3C,KAAMuB,IAAWG,MAAO,CAACE,aAAc,UAAYgB,UAAQ,UAGhG,QAId,OAAO,6BACH,mDC3CJW,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OA2BVC,MAzBf,WACI,OACI,eAAC,IAAD,CAAQC,UAAU,SAASlC,MAAO,CAAEmC,UAAW,SAA/C,UACI,eAACN,EAAD,CAAQK,UAAU,SAAlB,UACI,qBAAKA,UAAU,SACf,eAAC,IAAD,CAAME,KAAK,aAAaC,oBAAqB,CAAC,KAA9C,UACI,cAAC,IAAKzB,KAAN,qBAAe,KACf,cAAC,IAAKA,KAAN,UACI,mBAAG0B,KAAK,cAAcZ,OAAO,SAASa,IAAI,sBAA1C,yBADW,WAQvB,eAACR,EAAD,CAAS/B,MAAO,CAAEwC,QAAS,aAA3B,UACI,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,OAEJ,eAACR,EAAD,CAAQhC,MAAO,CAAEyC,UAAW,UAA5B,uBAAkD,mBAAGH,KAAK,iCAAR,8BAAlD,WCjBGI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7D,MAAK,YAAkD,IAA/C8D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.81049657.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport copyToClipboard from \"copy-to-clipboard\";\nimport {CheckCircleOutlined, CopyOutlined} from \"@ant-design/icons\";\n\nexport const CopyButton = (props) => {\n    const [copySuccess, setCopySuccess] = useState(false);\n\n    const copy = () => {\n        copyToClipboard(props.data);\n        setCopySuccess(true);\n        setTimeout(() => setCopySuccess(false), 2000); // Switch back to `copy` icon after 2 seconds.\n    }\n\n    if (copySuccess) {\n        return <CheckCircleOutlined onClick={copy}/>\n    } else {\n        return <CopyOutlined onClick={copy}/>\n    }\n}","import {useEffect, useState} from \"react\";\n\nexport const useAleoWASM = () => {\n    const [aleo, setAleo] = useState(null);\n\n    useEffect(() => {\n        if (aleo === null) {\n            import('aleo-wasm').then(module => setAleo(module));\n        }\n    }, []);  // eslint-disable-line react-hooks/exhaustive-deps\n    return aleo;\n};","import React, {useState} from \"react\";\nimport {Button, Card, Col, Divider, Form, Input, Row} from \"antd\";\nimport {CopyButton} from \"./CopyButton\";\nimport {useAleoWASM} from \"./aleo-wasm-hook\";\n\nexport const NewAccount = () => {\n    const [account, setAccount] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const aleo = useAleoWASM();\n\n    const generateAccount = async () => {\n        setLoading(true);\n        setTimeout(() => {\n            setAccount(new aleo.Account());\n            setLoading(false);\n        }, 1000);\n    }\n    const clear = () => setAccount(null);\n\n    const privateKey = () => account !== null ? account.to_private_key() : \"\";\n    const viewKey = () => account !== null ? account.to_view_key() : \"\";\n    const address = () => account !== null ? account.to_address() : \"\";\n\n    const layout = {labelCol: {span: 3}, wrapperCol: {span: 21}};\n\n    if (aleo !== null) {\n        return <Card title=\"Create a New Account\" style={{width: \"100%\", borderRadius: \"20px\"}} bordered={false}>\n            <Row justify=\"center\">\n                <Col><Button type=\"primary\" shape=\"round\" size=\"large\" onClick={generateAccount}\n                             loading={!!loading}>Generate</Button></Col>\n                <Col offset=\"1\"><Button shape=\"round\" size=\"large\" onClick={clear}>Clear</Button></Col>\n            </Row>\n            {\n                account &&\n                    <Form {...layout}>\n                        <Divider/>\n                        <Form.Item label=\"Private Key\" colon={false}>\n                            <Input size=\"large\" placeholder=\"Private Key\" value={privateKey()}\n                                   addonAfter={<CopyButton data={privateKey()}/>} disabled/>\n                        </Form.Item>\n                        <Form.Item label=\"View Key\" colon={false}>\n                            <Input size=\"large\" placeholder=\"View Key\" value={viewKey()}\n                                   addonAfter={<CopyButton data={viewKey()}/>} disabled/>\n                        </Form.Item>\n                        <Form.Item label=\"Address\" colon={false}>\n                            <Input size=\"large\" placeholder=\"Address\" value={address()}\n                                   addonAfter={<CopyButton data={address()}/>} disabled/>\n                        </Form.Item>\n                    </Form>\n            }\n        </Card>\n    } else {\n        return <h3>\n            <center>Loading...</center>\n        </h3>\n    }\n}","import React, {useState} from \"react\";\nimport {Card, Divider, Form, Input} from \"antd\";\nimport {CopyButton} from \"./CopyButton\";\nimport {useAleoWASM} from \"./aleo-wasm-hook\";\n\nexport const AccountFromPrivateKey = () => {\n    const [account, setAccount] = useState(null);\n    const aleo = useAleoWASM();\n\n    const onChange = (event) => {\n        setAccount(null);\n        try {\n            setAccount(aleo.Account.from_private_key(event.target.value))\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const layout = {labelCol: {span: 3}, wrapperCol: {span: 21}};\n\n    if (aleo !== null) {\n        const viewKey = () => account !== null ? account.to_view_key() : \"\";\n        const address = () => account !== null ? account.to_address() : \"\";\n\n        return <Card title=\"Load Account from Private Key\" style={{width: \"100%\", borderRadius: \"20px\"}}\n                     bordered={false}>\n            <Form {...layout}>\n                <Form.Item label=\"Private Key\" colon={false}>\n                    <Input name=\"privateKey\" size=\"large\" placeholder=\"Private Key\" allowClear onChange={onChange}\n                           style={{borderRadius: '20px'}}/>\n                </Form.Item>\n            </Form>\n            {\n                (account !== null) ?\n                    <Form {...layout}>\n                        <Divider/>\n                        <Form.Item label=\"View Key\" colon={false}>\n                            <Input size=\"large\" placeholder=\"View Key\" value={viewKey()}\n                                   addonAfter={<CopyButton data={address()} style={{borderRadius: '20px'}}/>} disabled/>\n                        </Form.Item>\n                        <Form.Item label=\"Address\" colon={false}>\n                            <Input size=\"large\" placeholder=\"Address\" value={address()}\n                                   addonAfter={<CopyButton data={address()} style={{borderRadius: '20px'}}/>} disabled/>\n                        </Form.Item>\n                    </Form>\n                    : null\n            }\n        </Card>\n    } else {\n        return <h3>\n            <center>Loading...</center>\n        </h3>\n    }\n}","import './App.css';\nimport React from 'react';\n\nimport {Layout, Menu} from 'antd';\nimport {NewAccount} from \"./NewAccount\";\nimport {AccountFromPrivateKey} from \"./AccountFromPrivateKey\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n    return (\n        <Layout className=\"layout\" style={{ minHeight: '100vh' }}>\n            <Header className=\"header\">\n                <div className=\"logo\" />\n                <Menu mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\">Account</Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <a href=\"./dev/bench\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            Benchmarks\n                        </a>\n                    </Menu.Item>\n                    {/*<Menu.Item key=\"3\">nav 3</Menu.Item>*/}\n                </Menu>\n            </Header>\n            <Content style={{ padding: '50px 50px' }}>\n                <NewAccount />\n                <br/>\n                <AccountFromPrivateKey />\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Visit the <a href=\"https://github.com/AleoHQ/aleo\">Aleo Github repo</a>.</Footer>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport '@aleohq/ui/dist/bundle.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}