{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","Footer","Spinner","LoadingOutlined","style","fontSize","spin","CopyButton","props","useState","copySuccess","setCopySuccess","copy","copyToClipboard","data","setTimeout","CheckCircleOutlined","onClick","CopyOutlined","NewAccount","aleo","setAleo","account","setAccount","loading","setLoading","useEffect","then","module","generateAccount","a","Account","privateKey","to_private_key","viewKey","to_view_key","address","to_address","title","width","borderRadius","bordered","justify","type","shape","size","offset","labelCol","span","wrapperCol","Item","label","colon","placeholder","value","addonAfter","disabled","AccountFromPrivateKey","layout","name","allowClear","onChange","event","from_private_key","target","error","console","App","className","theme","mode","defaultSelectedKeys","href","rel","padding","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26f1d844.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport { Button, Card, Col, Divider, Form, Input, Layout, Menu, Row } from 'antd';\nimport { CopyOutlined, CheckCircleOutlined, LoadingOutlined } from '@ant-design/icons';\n\nconst { Header, Content, Footer } = Layout;\n\nconst Spinner = () => <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst CopyButton = (props) => {\n    const [copySuccess, setCopySuccess] = useState(false);\n\n    const copy = () => {\n        copyToClipboard(props.data);\n        setCopySuccess(true);\n        setTimeout(() => setCopySuccess(false), 2000); // Switch back to `copy` icon after 2 seconds.\n    }\n\n    if (copySuccess) {\n        return <CheckCircleOutlined onClick={copy} />\n    } else {\n        return <CopyOutlined onClick={copy} />\n    }\n}\n\nconst NewAccount = () => {\n    const [aleo, setAleo] = useState(null);\n    const [account, setAccount] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (aleo === null) {\n            import('aleo-wasm').then(module => setAleo(module));\n        }\n    }, []);  // eslint-disable-line react-hooks/exhaustive-deps\n\n    const generateAccount = async () => {\n        setLoading(true);\n        setTimeout(() => {\n            setAccount(new aleo.Account());\n            setLoading(false);\n        }, 50);\n    }\n    const clear = () => setAccount(null);\n\n    const privateKey = () => account !== null ? account.to_private_key() : \"\";\n    const viewKey = () => account !== null ? account.to_view_key() : \"\";\n    const address = () => account !== null ? account.to_address() : \"\";\n\n    const layout = { labelCol: { span: 3 }, wrapperCol: { span: 21 } };\n\n    if (aleo !== null) {\n        return <Card title=\"Create a New Account\" style={{ width: \"100%\", borderRadius: \"20px\" }} bordered={false}>\n            <Row justify=\"center\">\n                <Col><Button type=\"primary\" shape=\"round\" size=\"large\" onClick={generateAccount}>{ loading ? <Spinner/> : \"Generate\" }</Button></Col>\n                <Col offset=\"1\"><Button shape=\"round\" size=\"large\" onClick={clear}>Clear</Button></Col>\n            </Row>\n            {\n                (account !== null) ?\n                    <Form {...layout}>\n                        <Divider />\n                        <Form.Item label=\"Private Key\" colon={false}>\n                            <Input size=\"large\" placeholder=\"Private Key\" value={privateKey()} addonAfter={<CopyButton data={privateKey()} />} disabled />\n                        </Form.Item>\n                        <Form.Item label=\"View Key\" colon={false}>\n                            <Input size=\"large\" placeholder=\"View Key\" value={viewKey()} addonAfter={<CopyButton data={viewKey()} />} disabled />\n                        </Form.Item>\n                        <Form.Item label=\"Address\" colon={false}>\n                            <Input size=\"large\" placeholder=\"Address\" value={address()} addonAfter={<CopyButton data={address()} />} disabled />\n                        </Form.Item>\n                    </Form>\n                    : null\n            }\n        </Card>\n    } else {\n        return <h3><center>Loading...</center></h3>\n    }\n}\n\nconst AccountFromPrivateKey = () => {\n    const [aleo, setAleo] = useState(null);\n    const [account, setAccount] = useState(null);\n\n    useEffect(() => {\n        if (aleo === null) {\n            import('aleo-wasm').then(module => setAleo(module));\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const onChange = (event) => {\n        setAccount(null);\n        try {\n            setAccount(aleo.Account.from_private_key(event.target.value))\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const layout = { labelCol: { span: 3 }, wrapperCol: { span: 21 } };\n\n    if (aleo !== null) {\n        const viewKey = () => account !== null ? account.to_view_key() : \"\";\n        const address = () => account !== null ? account.to_address() : \"\";\n\n        return <Card title=\"Load Account from Private Key\" style={{ width: \"100%\", borderRadius: \"20px\" }} bordered={false}>\n            <Form {...layout}>\n                <Form.Item label=\"Private Key\" colon={false}>\n                    <Input name=\"privateKey\" size=\"large\" placeholder=\"Private Key\" allowClear onChange={onChange} style={{ borderRadius: '20px' }} />\n                </Form.Item>\n            </Form>\n            {\n                (account !== null) ?\n                    <Form {...layout}>\n                        <Divider />\n                        <Form.Item label=\"View Key\" colon={false}>\n                            <Input size=\"large\" placeholder=\"View Key\" value={viewKey()} addonAfter={<CopyButton data={address()} style={{ borderRadius: '20px' }} />} disabled />\n                        </Form.Item>\n                        <Form.Item label=\"Address\" colon={false}>\n                            <Input size=\"large\" placeholder=\"Address\" value={address()} addonAfter={<CopyButton data={address()} style={{ borderRadius: '20px' }} />} disabled />\n                        </Form.Item>\n                    </Form>\n                    : null\n            }\n        </Card>\n    } else {\n        return <h3><center>Loading...</center></h3>\n    }\n}\n\nfunction App() {\n    return (\n        <Layout className=\"layout\">\n            <Header className=\"header\">\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\">Account</Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <a href=\"./dev/bench\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            Benchmarks\n                        </a>\n                    </Menu.Item>\n                    {/*<Menu.Item key=\"3\">nav 3</Menu.Item>*/}\n                </Menu>\n            </Header>\n            <Content style={{ padding: '50px 50px' }}>\n                <NewAccount />\n                <br/>\n                <AccountFromPrivateKey />\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Visit the <a href=\"https://github.com/AleoHQ/aleo\">Aleo Github repo</a>.</Footer>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}