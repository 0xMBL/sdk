{"version":3,"sources":["../node_modules/aleo-wasm/aleo_wasm_bg.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/aleo-wasm/aleo_wasm.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","cachegetInt32Memory0","getInt32Memory0","Int32Array","handleError","f","args","apply","this","e","getArrayU8FromWasm0","Account","__wrap","__destroy_into_raw","retptr","r0","r1","Object","create","prototype","private_key","ptr0","len0","Address","message","signature","ptr1","len1","view_key","address","Record","owner","value","payload","birth_program_id","death_program_id","serial_number_nonce","low1","high1","ptr2","len2","ptr3","len3","ptr4","len4","ptr5","len5","encrypted_record","ViewKey","__wbg_getRandomValues_57e4008f45f0e105","arg0","arg1","getRandomValues","arguments","__wbindgen_object_drop_ref","__wbg_randomFillSync_d90848a552cbd666","arg2","randomFillSync","__wbg_self_f865985e662246aa","self","__wbg_static_accessor_MODULE_39947eb3fe77895f","__wbg_require_c59851dfa0dc7e78","__wbg_crypto_bfb05100db79193b","crypto","__wbg_msCrypto_f6dddc6ae048b7e2","msCrypto","__wbindgen_is_undefined","__wbg_buffer_ebc6c8e75510eae3","__wbg_length_317f0dd77f7a6673","__wbg_new_135e963dedf67b22","__wbg_set_4a5072a31008e0cb","__wbg_newwithlength_78dc302d31527318","__wbg_subarray_34c228a45c72d146","__wbindgen_throw","Error","__wbindgen_memory","exports","originalModule","webpackPolyfill","children","defineProperty","enumerable","get","l","i","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","configurable","writable","key","_createClass","protoProps","staticProps"],"mappings":"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","file":"static/js/0.13e7f7e6.chunk.js","sourcesContent":["import * as wasm from './aleo_wasm_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*/\nexport class Account {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Account.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_account_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.account_new();\n        return Account.__wrap(ret);\n    }\n    /**\n    * @param {string} private_key\n    * @returns {Account}\n    */\n    static from_private_key(private_key) {\n        var ptr0 = passStringToWasm0(private_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.account_from_private_key(ptr0, len0);\n        return Account.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    to_private_key() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.account_to_private_key(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    to_view_key() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.account_to_view_key(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    to_address() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.account_to_address(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class Address {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Address.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_address_free(ptr);\n    }\n    /**\n    * @param {string} private_key\n    * @returns {Address}\n    */\n    static from_private_key(private_key) {\n        var ptr0 = passStringToWasm0(private_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.address_from_private_key(ptr0, len0);\n        return Address.__wrap(ret);\n    }\n    /**\n    * @param {string} view_key\n    * @returns {Address}\n    */\n    static from_view_key(view_key) {\n        var ptr0 = passStringToWasm0(view_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.address_from_view_key(ptr0, len0);\n        return Address.__wrap(ret);\n    }\n    /**\n    * @param {string} address\n    * @returns {Address}\n    */\n    static from_string(address) {\n        var ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.address_from_string(ptr0, len0);\n        return Address.__wrap(ret);\n    }\n    /**\n    * Verify a signature signed by the view key\n    * Returns `true` if the signature is verified correctly. Otherwise, returns `false`.\n    * @param {string} message\n    * @param {string} signature\n    * @returns {boolean}\n    */\n    verify(message, signature) {\n        var ptr0 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.address_verify(this.ptr, ptr0, len0, ptr1, len1);\n        return ret !== 0;\n    }\n    /**\n    * @returns {string}\n    */\n    to_string() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.address_to_string(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class Record {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Record.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_record_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.record_new_dummy();\n        return Record.__wrap(ret);\n    }\n    /**\n    * @param {string} owner\n    * @param {BigInt} value\n    * @param {string} payload\n    * @param {string} birth_program_id\n    * @param {string} death_program_id\n    * @param {string} serial_number_nonce\n    * @returns {Record}\n    */\n    static new(owner, value, payload, birth_program_id, death_program_id, serial_number_nonce) {\n        var ptr0 = passStringToWasm0(owner, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = value;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ptr2 = passStringToWasm0(payload, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = passStringToWasm0(birth_program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        var ptr4 = passStringToWasm0(death_program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len4 = WASM_VECTOR_LEN;\n        var ptr5 = passStringToWasm0(serial_number_nonce, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len5 = WASM_VECTOR_LEN;\n        var ret = wasm.record_new(ptr0, len0, low1, high1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5);\n        return Record.__wrap(ret);\n    }\n    /**\n    * @param {string} encrypted_record\n    * @param {string} view_key\n    * @returns {Record}\n    */\n    static decrypt(encrypted_record, view_key) {\n        var ptr0 = passStringToWasm0(encrypted_record, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(view_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.record_decrypt(ptr0, len0, ptr1, len1);\n        return Record.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    owner() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_owner(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_dummy() {\n        var ret = wasm.record_is_dummy(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {string}\n    */\n    payload() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_payload(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    birth_program_id() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_birth_program_id(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    death_program_id() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_death_program_id(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    serial_number_nonce() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_serial_number_nonce(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    commitment() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_commitment(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    commitment_randomness() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_commitment_randomness(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {BigInt}\n    */\n    value() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_value(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            u32CvtShim[0] = r0;\n            u32CvtShim[1] = r1;\n            const n0 = uint64CvtShim[0];\n            return n0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    to_string() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.record_to_string(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class ViewKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ViewKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_viewkey_free(ptr);\n    }\n    /**\n    * @param {string} private_key\n    * @returns {ViewKey}\n    */\n    static from_private_key(private_key) {\n        var ptr0 = passStringToWasm0(private_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.viewkey_from_private_key(ptr0, len0);\n        return ViewKey.__wrap(ret);\n    }\n    /**\n    * @param {string} view_key\n    * @returns {ViewKey}\n    */\n    static from_string(view_key) {\n        var ptr0 = passStringToWasm0(view_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.viewkey_from_string(ptr0, len0);\n        return ViewKey.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    to_string() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.viewkey_to_string(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Sign a message with the view key.\n    * @param {string} message\n    * @returns {string}\n    */\n    sign(message) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.viewkey_sign(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n\nexport function __wbg_getRandomValues_57e4008f45f0e105() { return handleError(function (arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n}, arguments) };\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbg_randomFillSync_d90848a552cbd666() { return handleError(function (arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n}, arguments) };\n\nexport function __wbg_self_f865985e662246aa() { return handleError(function () {\n    var ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_static_accessor_MODULE_39947eb3fe77895f() {\n    var ret = module;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_require_c59851dfa0dc7e78() { return handleError(function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_crypto_bfb05100db79193b(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_msCrypto_f6dddc6ae048b7e2(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_undefined(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbg_buffer_ebc6c8e75510eae3(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_length_317f0dd77f7a6673(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport function __wbg_new_135e963dedf67b22(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_4a5072a31008e0cb(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport function __wbg_newwithlength_78dc302d31527318(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_subarray_34c228a45c72d146(arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_memory() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import * as wasm from \"./aleo_wasm_bg.wasm\";\nexport * from \"./aleo_wasm_bg.js\";"],"sourceRoot":""}