{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["NewAccount","useState","aleo","setAleo","account","setAccount","useEffect","then","module","generate","a","Account","title","style","width","layout","Item","justify","type","shape","onClick","offset","size","placeholder","value","to_private_key","disabled","to_view_key","to_address","AccountFromPrivateKey","marginBottom","name","allowClear","onChange","event","from_private_key","target","error","console","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f15168ff.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nimport { Button, Card, Col, Divider, Form, Input, Row } from 'antd';\n\nconst NewAccount = () => {\n    const [aleo, setAleo] = useState(null);\n    const [account, setAccount] = useState(null);\n\n    useEffect(() => {\n        if (aleo === null) {\n            import('aleo-wasm').then(module => {\n                setAleo(module);\n            })\n        }\n    }, []);\n\n    const generate = async () => setAccount(await new aleo.Account());\n    const clear = () => setAccount(null);\n\n    if (aleo !== null) {\n        const privateKey = () => account !== null ? account.to_private_key() : \"\";\n        const viewKey = () => account !== null ? account.to_view_key() : \"\";\n        const address = () => account !== null ? account.to_address() : \"\";\n\n        return <Card title=\"Generate a New Account\" style={{ width: \"90%\" }}>\n            <Form layout=\"vertical\">\n                <Form.Item>\n                    <Row justify=\"center\">\n                        <Col><Button type=\"primary\" shape=\"round\" onClick={generate}>Generate</Button></Col>\n                        <Col offset=\"1\"><Button shape=\"round\" onClick={clear}>Clear</Button></Col>\n                    </Row>\n                </Form.Item>\n                {\n                    (account !== null) ?\n                        <>\n                            <Divider />\n\n                            <Form.Item>\n                                <Input size=\"large\" placeholder=\"Private Key\" value={privateKey()} disabled />\n                            </Form.Item>\n                            <Form.Item>\n                                <Input size=\"large\" placeholder=\"View Key\" value={viewKey()} disabled />\n                            </Form.Item>\n                            <Form.Item>\n                                <Input size=\"large\" placeholder=\"Address\" value={address()} disabled />\n                            </Form.Item>\n                        </>\n                        : null\n                }\n            </Form>\n        </Card>\n    } else {\n        return <h2>Loading...</h2>\n    }\n}\n\nconst AccountFromPrivateKey = () => {\n    const [aleo, setAleo] = useState(null);\n    const [account, setAccount] = useState(null);\n\n    useEffect(() => {\n        if (aleo === null) {\n            import('aleo-wasm').then(module => {\n                setAleo(module);\n            })\n        }\n    }, []);\n\n    const onChange = (event) => {\n        setAccount(null);\n        try {\n            setAccount(aleo.Account.from_private_key(event.target.value))\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    if (aleo !== null) {\n        const viewKey = () => account !== null ? account.to_view_key() : \"\";\n        const address = () => account !== null ? account.to_address() : \"\";\n\n        return <Card title=\"Load Account from Private Key\" style={{ width: \"90%\" }}>\n            <div style={{ marginBottom: 16 }}>\n                <Input name=\"privateKey\" size=\"large\" placeholder=\"Private Key\" allowClear onChange={onChange} />\n            </div>\n            {\n                (account !== null) ?\n                    <>\n                        <Divider />\n\n                        <Form layout=\"vertical\">\n                            <Form.Item>\n                                <Input size=\"large\" placeholder=\"View Key\" value={viewKey()} disabled />\n                            </Form.Item>\n                            <Form.Item>\n                                <Input size=\"large\" placeholder=\"Address\" value={address()} disabled />\n                            </Form.Item>\n                        </Form>\n                    </>\n                    : null\n            }\n        </Card>\n    } else {\n        return <h2>Loading...</h2>\n    }\n}\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <NewAccount />\n                <br/>\n                <AccountFromPrivateKey />\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}